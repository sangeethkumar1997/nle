[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | src
  | win/rl/nethack_rl
)/
'''

[tool.isort]
force_single_line = true
profile = "black"
skip_glob = "**/__init__.py"

[tool.ruff]
# See https://docs.astral.sh/ruff/rules/.
extend-exclude = [
  "third_party",
]
exclude = ["win/rl/nle"]
[tool.ruff.lint]
ignore = [
    "B008",
    "B905",
    "C901",
    "E501",
    "E731",
]
select = [
    "B",
    "B9",
    "C",
    "E",
    "F",
    "W",
    "R",
]
[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused-import.

[tool.cibuildwheel]
# We need to build wheels for the following Python versions:
build = "cp{310,311,312,313}-*"

[tool.cibuildwheel.linux]
# Only manylinux is supported (no musllinux)
build = "cp{310,311,312,313}-manylinux*"

# We need to clean up the build directory, all .so files, and CMakeCache.txt
# and install the dependencies using yum, as manylinux2014 image is CentOS 7-based
before-all = "rm -rf {project}/build {project}/*.so {project}/CMakeCache.txt && yum install -y autoconf bison cmake flex git libtool"

# Build for the architecure of the runner in the GitHub Actions workflow:
# ubuntu-latest -> x86_64
# ubuntu-24.04-arm -> aarch64
archs = "native"

# Use manylinux2014 image for both x86_64 and aarch64
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"

[tool.cibuildwheel.macos]
# For macOS wheels, we only need to install cmake
before-all = "rm -rf {project}/build {project}/*.so {project}/CMakeCache.txt && brew install cmake"
